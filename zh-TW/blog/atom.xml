<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://pnpm.io/zh-TW/blog</id>
    <title>pnpm Blog</title>
    <updated>2022-12-30T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://pnpm.io/zh-TW/blog"/>
    <subtitle>pnpm Blog</subtitle>
    <icon>https://pnpm.io/zh-TW/img/favicon.png</icon>
    <entry>
        <title type="html"><![CDATA[The year 2022 for pnpm]]></title>
        <id>https://pnpm.io/zh-TW/blog/2022/12/30/yearly-update</id>
        <link href="https://pnpm.io/zh-TW/blog/2022/12/30/yearly-update"/>
        <updated>2022-12-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[It is the end of the year. A really hard year. As you may know, I live in Ukraine, so due to Russia's war against us, it was harder to lead this project than in previous years. Nevertheless, it was a good year for pnpm. We've got a lot of new users, contributors, and we have implemented many great features.]]></summary>
        <content type="html"><![CDATA[<p>It is the end of the year. A really hard year. As you may know, I live in Ukraine, so due to Russia's war against us, it was harder to lead this project than in previous years. Nevertheless, it was a good year for pnpm. We've got a lot of new users, contributors, and we have implemented many great features.</p><p><img loading="lazy" src="/zh-TW/assets/images/2022-review-092f8f0dfe82b760c2e90fd776d82f75.png" width="640" height="640" class="img_Ytbv"></p><p>(the above illustration was generated by Midjourney. The tiger symolizes the year of the tiger)</p><h2 class="anchor anchorWithStickyNavbar_G0xS" id="使用方法">使用方法<a href="#使用方法" class="hash-link" aria-label="Direct link to 使用方法" title="Direct link to 使用方法">​</a></h2><h3 class="anchor anchorWithStickyNavbar_G0xS" id="下載統計">下載統計<a href="#下載統計" class="hash-link" aria-label="Direct link to 下載統計" title="Direct link to 下載統計">​</a></h3><p>我今年的目標是在下載量上擊敗Lerna。 We were able to achieve this goal <a href="https://npm-stat.com/charts.html?package=pnpm&amp;package=lerna&amp;from=2022-01-01&amp;to=2022-12-30" target="_blank" rel="noopener noreferrer">in August</a>:</p><p><img loading="lazy" src="/zh-TW/assets/images/pnpm-vs-lerna-stats-cad28f3b9685ef684c864f919f7f9c5e.png" width="997" height="400" class="img_Ytbv"></p><p>pnpm was downloaded more than <a href="https://npm-stat.com/charts.html?package=pnpm&amp;from=2016-12-01&amp;to=2022-12-30" target="_blank" rel="noopener noreferrer">5 times more</a> in 2022 than in 2021:</p><p><img loading="lazy" src="/zh-TW/assets/images/download-stats-2022-e4de79bf61e1066802166f9d97cb36ac.png" width="997" height="400" class="img_Ytbv"></p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="訪問docs統計">訪問Docs統計<a href="#訪問docs統計" class="hash-link" aria-label="Direct link to 訪問Docs統計" title="Direct link to 訪問Docs統計">​</a></h3><p>我們從 Google 分析收集了一些訪問 docs 的客觀的數據。 In 2022, sometimes we had more than 20,000 unique visitors a week. This is 10 times more than in 2021!</p><p><img loading="lazy" src="/zh-TW/assets/images/ga-unique-visits-2022-b2e9bf0b6c559a5c59fdbfd8bb1861f0.png" width="778" height="391" class="img_Ytbv"></p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="github上的星星統計">GitHub上的星星統計<a href="#github上的星星統計" class="hash-link" aria-label="Direct link to GitHub上的星星統計" title="Direct link to GitHub上的星星統計">​</a></h3><p>Our <a href="https://github.com/pnpm/pnpm" target="_blank" rel="noopener noreferrer">main GitHub repository</a> received almost +7,000 stars this year.</p><p><img loading="lazy" src="/zh-TW/assets/images/stars-2022-434ca95e6da688fdff1bb1bf89d6a2d9.png" width="584" height="787" class="img_Ytbv"></p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="our-contributors">Our contributors<a href="#our-contributors" class="hash-link" aria-label="Direct link to Our contributors" title="Direct link to Our contributors">​</a></h3><p>We had a lot of new and active contributors this year. These are the people the merge at least one PR in 2022:</p><ul><li><a href="https://github.com/zkochan" target="_blank" rel="noopener noreferrer">Zoltan Kochan</a></li><li><a href="https://github.com/lvqq" target="_blank" rel="noopener noreferrer">chlorine</a></li><li><a href="https://github.com/await-ovo" target="_blank" rel="noopener noreferrer">await-ovo</a></li><li><a href="https://github.com/gluxon" target="_blank" rel="noopener noreferrer">Brandon Cheng</a></li><li><a href="https://github.com/d3lm" target="_blank" rel="noopener noreferrer">Dominic Elm</a></li><li><a href="https://github.com/mcmxcdev" target="_blank" rel="noopener noreferrer">MCMXC</a></li><li><a href="https://github.com/dev-itsheng" target="_blank" rel="noopener noreferrer">那里好脏不可以</a></li><li><a href="https://github.com/HomyeeKing" target="_blank" rel="noopener noreferrer">Homyee King</a></li><li><a href="https://github.com/Shinyaigeek" target="_blank" rel="noopener noreferrer">Shinobu Hayashi</a></li><li><a href="https://github.com/BlackHole1" target="_blank" rel="noopener noreferrer">Black-Hole</a></li><li><a href="https://github.com/kenrick95" target="_blank" rel="noopener noreferrer">Kenrick</a></li><li><a href="https://github.com/weyert" target="_blank" rel="noopener noreferrer">Weyert de Boer</a></li><li><a href="https://github.com/gwhitney" target="_blank" rel="noopener noreferrer">Glen Whitney</a></li><li><a href="https://github.com/chengcyber" target="_blank" rel="noopener noreferrer">Cheng</a></li><li><a href="https://github.com/fireairforce" target="_blank" rel="noopener noreferrer">zoomdong</a></li><li><a href="https://github.com/ufec" target="_blank" rel="noopener noreferrer">thinkhalo</a></li><li><a href="https://github.com/LuciNyan" target="_blank" rel="noopener noreferrer">子瞻 Luci</a></li><li><a href="https://github.com/Spencer17x" target="_blank" rel="noopener noreferrer">spencer17x</a></li><li><a href="https://github.com/liuxingbaoyu" target="_blank" rel="noopener noreferrer">liuxingbaoyu</a></li><li><a href="https://github.com/WhiteKiwi" target="_blank" rel="noopener noreferrer">장지훈</a></li><li><a href="https://github.com/jondlm" target="_blank" rel="noopener noreferrer">Jon de la Motte</a></li><li><a href="https://github.com/Jack-Works" target="_blank" rel="noopener noreferrer">Jack Works</a></li><li><a href="https://github.com/milahu" target="_blank" rel="noopener noreferrer">milahu</a></li><li><a href="https://github.com/David-Collins" target="_blank" rel="noopener noreferrer">David Collins</a></li><li><a href="https://github.com/nikoladev" target="_blank" rel="noopener noreferrer">nikoladev</a></li><li><a href="https://github.com/ibezkrovnyi" target="_blank" rel="noopener noreferrer">Igor Bezkrovnyi</a></li><li><a href="https://github.com/illright" target="_blank" rel="noopener noreferrer">Lev Chelyadinov</a></li><li><a href="https://github.com/javier-garcia-meteologica" target="_blank" rel="noopener noreferrer">javier-garcia-meteologica</a></li></ul><h2 class="anchor anchorWithStickyNavbar_G0xS" id="特色功能">特色功能<a href="#特色功能" class="hash-link" aria-label="Direct link to 特色功能" title="Direct link to 特色功能">​</a></h2><h3 class="anchor anchorWithStickyNavbar_G0xS" id="supporting-a-symlinkless-hoisted-node_modules-since-v6250">Supporting a symlinkless hoisted <code>node_modules</code> (since <a href="https://github.com/pnpm/pnpm/releases/tag/v6.25.0" target="_blank" rel="noopener noreferrer">v6.25.0</a>)<a href="#supporting-a-symlinkless-hoisted-node_modules-since-v6250" class="hash-link" aria-label="Direct link to supporting-a-symlinkless-hoisted-node_modules-since-v6250" title="Direct link to supporting-a-symlinkless-hoisted-node_modules-since-v6250">​</a></h3><p>Right at the beginning of 2022, we have added support for the "traditional" hoisted (a.k.a flat <code>node_modules</code>). We use Yarn's hoisting algorithm to create a proper hoisted <code>node_modules</code>. This new setting has basically made pnpm compatible with all Node.js stack that are compatible with npm CLI.</p><p>To use the hoisted <code>node_modules</code> directory structure, use the <code>node-linker=hoisted</code> setting in an <code>.npmrc</code> file.</p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="side-effects-cache-since-v700">Side effects cache (since <a href="https://github.com/pnpm/pnpm/releases/tag/v7.0.0" target="_blank" rel="noopener noreferrer">v7.0.0</a>)<a href="#side-effects-cache-since-v700" class="hash-link" aria-label="Direct link to side-effects-cache-since-v700" title="Direct link to side-effects-cache-since-v700">​</a></h3><p>Since v7, <a href="/zh-TW/npmrc#side-effects-cache">side-effect-cache</a> is enabled by default, so dependencies that should be built are only built once on a machine. This improves installation speed by a lot in projects that have dependencies with build scripts.</p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="dependencies-patching-since-v740">Dependencies patching (since <a href="https://github.com/pnpm/pnpm/releases/tag/v7.4.0" target="_blank" rel="noopener noreferrer">v7.4.0</a>)<a href="#dependencies-patching-since-v740" class="hash-link" aria-label="Direct link to dependencies-patching-since-v740" title="Direct link to dependencies-patching-since-v740">​</a></h3><p>The <a href="/zh-TW/cli/patch"><code>pnpm patch</code></a> command have been added for patching dependencies in your <code>node_modules</code>.</p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="time-based-resolution-strategy-since-v7100">Time-based resolution strategy (since <a href="https://github.com/pnpm/pnpm/releases/tag/v7.10.0" target="_blank" rel="noopener noreferrer">v7.10.0</a>)<a href="#time-based-resolution-strategy-since-v7100" class="hash-link" aria-label="Direct link to time-based-resolution-strategy-since-v7100" title="Direct link to time-based-resolution-strategy-since-v7100">​</a></h3><p>A new resolution mode was added to pnpm, which should make updating dependencies more secure. You can change the resolution mode with the <a href="https://pnpm.io/npmrc#resolution-mode" target="_blank" rel="noopener noreferrer">resolution-mode</a> setting.</p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="listing-licenses-of-dependencies-since-v7170">Listing licenses of dependencies (since <a href="https://github.com/pnpm/pnpm/releases/tag/v7.17.0" target="_blank" rel="noopener noreferrer">v7.17.0</a>)<a href="#listing-licenses-of-dependencies-since-v7170" class="hash-link" aria-label="Direct link to listing-licenses-of-dependencies-since-v7170" title="Direct link to listing-licenses-of-dependencies-since-v7170">​</a></h3><p>You may now use the <a href="/zh-TW/cli/licenses"><code>pnpm licenses list</code></a> command to check the licenses of the installed packages.</p>]]></content>
        <author>
            <name>Zoltan Kochan</name>
            <uri>http://twitter.com/zoltankochan</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[2021 年的 pnpm]]></title>
        <id>https://pnpm.io/zh-TW/blog/2021/12/29/yearly-update</id>
        <link href="https://pnpm.io/zh-TW/blog/2021/12/29/yearly-update"/>
        <updated>2021-12-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[對pnpm來說好的一年已經到了尾聲，讓我來看一下我們的進展。]]></summary>
        <content type="html"><![CDATA[<p>對pnpm來說好的一年已經到了尾聲，讓我來看一下我們的進展。</p><h2 class="anchor anchorWithStickyNavbar_G0xS" id="使用統計">使用統計<a href="#使用統計" class="hash-link" aria-label="Direct link to 使用統計" title="Direct link to 使用統計">​</a></h2><h3 class="anchor anchorWithStickyNavbar_G0xS" id="下載統計">下載統計<a href="#下載統計" class="hash-link" aria-label="Direct link to 下載統計" title="Direct link to 下載統計">​</a></h3><p>今年我的目標是在下載統計數據上打敗 Bower。 我們<a href="https://npm-stat.com/charts.html?package=pnpm&amp;package=bower&amp;from=2021-01-01&amp;to=2021-12-29" target="_blank" rel="noopener noreferrer">在十一月時</a>已經完成了</p><p><img loading="lazy" src="/zh-TW/assets/images/pnpm-vs-bower-stats-6ec69a7308f5fbc1433420b1b2f7457f.png" width="976" height="389" class="img_Ytbv"></p><p>在 2021 年時，pnpm下載量大約比 2020 時<a href="https://npm-stat.com/charts.html?package=pnpm&amp;from=2016-12-01&amp;to=2021-12-29" target="_blank" rel="noopener noreferrer">多 3 次以上</a>：</p><p><img loading="lazy" src="/zh-TW/assets/images/download-stats-2021-1418562cb03abd558c4a6b4b17155227.png" width="983" height="394" class="img_Ytbv"></p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_fVrm"><div class="admonitionHeading_CfVA"><span class="admonitionIcon_Hsjw"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>注意事項</div><div class="admonitionContent_CXYE"><p>這些數據沒有測量到 pnpm 所有不同的安裝方式！ 那些數據是只有測量透過 <a href="https://www.npmjs.com/package/pnpm" target="_blank" rel="noopener noreferrer">pnpm npm package</a> 下載的數據。 在今年，我們也有新增已編譯成二進位版的 pnpm，其發送方式與其他版本不同</p></div></div><h3 class="anchor anchorWithStickyNavbar_G0xS" id="訪問docs統計">訪問Docs統計<a href="#訪問docs統計" class="hash-link" aria-label="Direct link to 訪問Docs統計" title="Direct link to 訪問Docs統計">​</a></h3><p>我們從 Google 分析收集了一些訪問 docs 的客觀的數據。 在 2021 年，我們有時每週會有多於2000個獨一無二的閱讀者。</p><p><img loading="lazy" src="/zh-TW/assets/images/ga-unique-visits-2021-b8bc3649f680565127696c85bdd4b701.png" width="665" height="509" class="img_Ytbv"></p><p>大多數的使用者皆來自美國和中國</p><p><img loading="lazy" src="/zh-TW/assets/images/countries-2021-8eb9625e1798649ee04451dfb10ac851.png" width="585" height="498" class="img_Ytbv"></p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="github上的星星統計">GitHub上的星星統計<a href="#github上的星星統計" class="hash-link" aria-label="Direct link to GitHub上的星星統計" title="Direct link to GitHub上的星星統計">​</a></h3><p>我們的<a href="https://github.com/pnpm/pnpm" target="_blank" rel="noopener noreferrer">主要 GitHub 數據庫</a>今年收到 5000 多個星星。</p><p><img loading="lazy" src="/zh-TW/assets/images/stars-2021-0061c16f424e33ba0db224d82bcb53f3.png" width="913" height="800" class="img_Ytbv"></p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="新使用者統計">新使用者統計<a href="#新使用者統計" class="hash-link" aria-label="Direct link to 新使用者統計" title="Direct link to 新使用者統計">​</a></h3><p>今年我們最大的新用戶是 <a href="https://github.com/pnpm/pnpm.github.io/pull/89" target="_blank" rel="noopener noreferrer">Bytedance</a> （抖音背後的公司）</p><p>並且，很多不錯的開源專案開始使用 pnpm了。 一些專案因為 monorepos 的良好支援所以切換至 pnpm：</p><ul><li><a href="https://github.com/vuejs/vue-next" target="_blank" rel="noopener noreferrer">Vue</a></li><li><a href="https://github.com/vitejs/vite" target="_blank" rel="noopener noreferrer">Vite</a></li><li>還有<a href="https://pnpm.io/workspaces#usage-examples" target="_blank" rel="noopener noreferrer">其他</a>......</li></ul><p>或者一些專案因為他們喜歡 pnpm 如此地高效、快速、與美觀：</p><ul><li><a href="https://twitter.com/Autoprefixer/status/1476226146488692736" target="_blank" rel="noopener noreferrer">Autoprefixer</a></li><li><a href="https://twitter.com/PostCSS/status/1470438664006258701" target="_blank" rel="noopener noreferrer">PostCSS</a></li><li><a href="https://twitter.com/Browserslist/status/1468264308308156419" target="_blank" rel="noopener noreferrer">Browserslist</a></li></ul><h2 class="anchor anchorWithStickyNavbar_G0xS" id="特色功能">特色功能<a href="#特色功能" class="hash-link" aria-label="Direct link to 特色功能" title="Direct link to 特色功能">​</a></h2><h3 class="anchor anchorWithStickyNavbar_G0xS" id="新的-lockfile-格式-於-v600-新增">新的 lockfile 格式 (於 <a href="https://github.com/pnpm/pnpm/releases/tag/v6.0.0" target="_blank" rel="noopener noreferrer">v6.0.0</a> 新增)<a href="#新的-lockfile-格式-於-v600-新增" class="hash-link" aria-label="Direct link to 新的-lockfile-格式-於-v600-新增" title="Direct link to 新的-lockfile-格式-於-v600-新增">​</a></h3><p>在今年的重要更新中，最重要且第一個更新就是新的 <code>pnpm-lock.yaml</code> 格式。 這是一個突破性更新，所以我們需要以第 6 版釋出。 但那是個成功。 舊的 lockfile 常常造成 Git 衝突。 自從新的格式推出後，我們沒有再接收到與 Git 衝突相關的抱怨。</p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="管理-nodejs-版本-於-v6120-新增">管理 Node.js 版本 (於 <a href="https://github.com/pnpm/pnpm/releases/tag/v6.12.0" target="_blank" rel="noopener noreferrer">v6.12.0</a> 新增)<a href="#管理-nodejs-版本-於-v6120-新增" class="hash-link" aria-label="Direct link to 管理-nodejs-版本-於-v6120-新增" title="Direct link to 管理-nodejs-版本-於-v6120-新增">​</a></h3><p>我們推出了新命令 <code>pnpm env</code>，該命令能讓您管理 Node.js 版本。 所以您可以使用 pnpm 來取代像 nvm、Volta 等 Node.js 版本管理器</p><p>並且，pnpm可以獨立下載與運行，所以即使您沒有預先安裝 Node.js，您還是可以運行 pnpm。</p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="注入本地依賴套件-於-v6200-新增">注入本地依賴套件 （於 <a href="https://github.com/pnpm/pnpm/releases/tag/v6.20.0" target="_blank" rel="noopener noreferrer">v6.20.0</a> 新增）<a href="#注入本地依賴套件-於-v6200-新增" class="hash-link" aria-label="Direct link to 注入本地依賴套件-於-v6200-新增" title="Direct link to 注入本地依賴套件-於-v6200-新增">​</a></h3><p>您可以「注入」一個本地依賴套件。 預設情況下，本地依賴套件會軟連結至 <code>node_modules</code>，但有了這新功能，您可以使 pnpm 硬連結模組文件。</p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="改善-peer-dependency-問題回報-於-v6240-改善">改善 peer dependency 問題回報 （於 <a href="https://github.com/pnpm/pnpm/releases/tag/v6.24.0" target="_blank" rel="noopener noreferrer">v6.24.0</a> 改善）<a href="#改善-peer-dependency-問題回報-於-v6240-改善" class="hash-link" aria-label="Direct link to 改善-peer-dependency-問題回報-於-v6240-改善" title="Direct link to 改善-peer-dependency-問題回報-於-v6240-改善">​</a></h3><p>Peer dependency 問題報告以前是僅印出純文字而且很難理解的。 現在它們已經全部被分類，並且輸出能以很好的層次結構表進行呈現</p><h2 class="anchor anchorWithStickyNavbar_G0xS" id="競爭">競爭<a href="#競爭" class="hash-link" aria-label="Direct link to 競爭" title="Direct link to 競爭">​</a></h2><h3 class="anchor anchorWithStickyNavbar_G0xS" id="yarn">Yarn<a href="#yarn" class="hash-link" aria-label="Direct link to Yarn" title="Direct link to Yarn">​</a></h3><p>Yarn 在<a href="https://dev.to/arcanis/yarn-31-corepack-esm-pnpm-optional-packages--3hak#new-install-mode-raw-pnpm-endraw-" target="_blank" rel="noopener noreferrer">版本 3.1</a> 中新增了 pnpm 連結器。 所以 Yarn 現在也可以創造出與 pnpm 相似的資料夾結構。</p><p>而且，Yarn 開發團隊計畫要實作一個內容可定址的儲存區以達到高效利用磁碟空間</p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="npm">npm<a href="#npm" class="hash-link" aria-label="Direct link to npm" title="Direct link to npm">​</a></h3><p>Npm 開發團隊也決定採取 pnpm使用的軟連結 node_modules 資料夾結構（相關的 <a href="https://github.com/npm/rfcs/blob/main/accepted/0042-isolated-mode.md" target="_blank" rel="noopener noreferrer">RFC</a>）</p><h3 class="anchor anchorWithStickyNavbar_G0xS" id="其他">其他<a href="#其他" class="hash-link" aria-label="Direct link to 其他" title="Direct link to 其他">​</a></h3><p>使用Zig、<a href="https://github.com/voltpkg/volt" target="_blank" rel="noopener noreferrer">Volt</a> 和 Rust 寫出來的 <a href="https://twitter.com/jarredsumner/status/1473416431291174912/photo/1" target="_blank" rel="noopener noreferrer">Bun</a> 宣稱它比 npm、Yarn、pnpm 都還要快。 但是我還沒對這些模組管理器進行跑分。</p><h2 class="anchor anchorWithStickyNavbar_G0xS" id="未來展望">未來展望<a href="#未來展望" class="hash-link" aria-label="Direct link to 未來展望" title="Direct link to 未來展望">​</a></h2><p>更快、更好</p>]]></content>
        <author>
            <name>Zoltan Kochan</name>
            <uri>http://twitter.com/zoltankochan</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pnpm 的 Node-Modules 設定選項]]></title>
        <id>https://pnpm.io/zh-TW/blog/2020/10/17/node-modules-configuration-options-with-pnpm</id>
        <link href="https://pnpm.io/zh-TW/blog/2020/10/17/node-modules-configuration-options-with-pnpm"/>
        <updated>2020-10-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[有很多方法可以創建 nodemodules 目錄。 目標一定是創建最嚴格的 nodemodules，但如果那不可能的話，也有選項讓您可以產生一個鬆散的 node_modules。]]></summary>
        <content type="html"><![CDATA[<p>有很多方法可以創建 node_modules 目錄。 目標一定是創建最嚴格的 node_modules，但如果那不可能的話，也有選項讓您可以產生一個鬆散的 node_modules。</p><h2 class="anchor anchorWithStickyNavbar_G0xS" id="預設設定">預設設定<a href="#預設設定" class="hash-link" aria-label="Direct link to 預設設定" title="Direct link to 預設設定">​</a></h2><p>預設情況下， pnpm 第五版會創建一個半嚴格的 node_modules 資料夾。 「半嚴格」意思是您的應用程式只能匯入新增至 <code>package.json</code> 的依賴套件（當然也有一些例外）。 不過這樣的話，您的依賴套件將能存取任何套件。</p><p>預設的設定看起來像這樣：</p><div class="language-ini codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-ini codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">;將所有模組都提升至 node_modules/.pnpm/node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hoist-pattern[]=*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">;將所有型別宣告提升至根目錄以讓 TypeScript 能找到</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public-hoist-pattern[]=*types*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">;將所有與ESLint相關的模組提升至根目錄</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public-hoist-pattern[]=*eslint*</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_G0xS" id="plugnplay-最嚴格的設定">Plug'n'Play－ 最嚴格的設定<a href="#plugnplay-最嚴格的設定" class="hash-link" aria-label="Direct link to Plug'n'Play－ 最嚴格的設定" title="Direct link to Plug'n'Play－ 最嚴格的設定">​</a></h2><p>pnpm 從 5.9 版開始支援 <a href="https://yarnpkg.com/features/pnp" target="_blank" rel="noopener noreferrer">Yarn 的 Plug'n'Play</a> 。 當使用 PnP 時，您的應用程式和其依賴套件將只能存取它們宣告的依賴套件。 這比設定 <code>hoist=false</code> 還要嚴格，因為在 Monorepo 中，您的應用程式甚至無法存取根專案的依賴套件。</p><p>如果要使用 Plug'n'Play，請使用以下設定：</p><div class="language-ini codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-ini codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">node-linker=pnp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">symlink=false</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_G0xS" id="一個嚴格傳統的模組目錄">一個嚴格，傳統的模組目錄<a href="#一個嚴格傳統的模組目錄" class="hash-link" aria-label="Direct link to 一個嚴格，傳統的模組目錄" title="Direct link to 一個嚴格，傳統的模組目錄">​</a></h2><p>如果您還沒有準備好要使用 PnP，您仍然可以透過將以下設定設定為 false 來允許模組只能存取自己的依賴模組，以保障其嚴格性：</p><div class="language-ini codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-ini codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">hoist=false</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>不過，如果您的一些依賴模組嘗試存取沒有依賴套件的模組，您有兩個選擇：</p><ol><li><p>創建一個 <code>pnpmfile.js</code> 檔案並且使用<a href="/zh-TW/pnpmfile">鉤子</a>將遺失的依賴套件新增至依賴套件名單。</p></li><li><p>將一組表達式填入 <code>hoist-pattern</code> 設定。 例如，如果是 <code>babel-core</code> 模組找不到，請將以下設定加入 <code>.npmrc</code>：</p><div class="language-ini codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-ini codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">hoist-pattern[]=babel-core</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><h2 class="anchor anchorWithStickyNavbar_G0xS" id="最不好的情況提升所有東西至根目錄">最不好的情況－提升所有東西至根目錄<a href="#最不好的情況提升所有東西至根目錄" class="hash-link" aria-label="Direct link to 最不好的情況－提升所有東西至根目錄" title="Direct link to 最不好的情況－提升所有東西至根目錄">​</a></h2><p>一些工具可能即使使用 pnpm 預設設定也沒辦法正常執行，因為pnpm預設設定會將所有東西提升至根目錄並將一些模組提升至根目錄。 這種情況下，您可以選擇將所有東西或者部分依賴套件提升至根目錄：</p><p>將所有項目提升到 node_modules 的根目錄:</p><div class="language-ini codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-ini codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">shamefully-hoist=true</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>僅提升符合以下表達式的模組：</p><div class="language-ini codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-ini codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">public-hoist-pattern[]=babel-*</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Zoltan Kochan</name>
            <uri>http://twitter.com/zoltankochan</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[平面化node_module不會是唯一的方法]]></title>
        <id>https://pnpm.io/zh-TW/blog/2020/05/27/flat-node-modules-is-not-the-only-way</id>
        <link href="https://pnpm.io/zh-TW/blog/2020/05/27/flat-node-modules-is-not-the-only-way"/>
        <updated>2020-05-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[新使用者經常問我關於 pnpm 生成出來的奇怪 node_modules 資料夾結構。 為什麼它不是扁平化的？ 而且全部的子依賴套件跑去哪了？]]></summary>
        <content type="html"><![CDATA[<p>新使用者經常問我關於 pnpm 生成出來的奇怪 <code>node_modules</code> 資料夾結構。 為什麼它不是扁平化的？ 而且全部的子依賴套件跑去哪了？</p><blockquote><p>在此會假設此文讀者已經熟悉了 npm 和 Yarn 創建出來的扁平化 <code>node_modules</code> 資料夾。 如果您不了解為什麼 npm 要在第三版開始使用扁平化 <code>node_modules</code>，您可以在<a href="https://www.kochan.io/nodejs/why-should-we-use-pnpm.html" target="_blank" rel="noopener noreferrer">為什麼我們應該使用pnpm</a>文章中找到一些背景</p></blockquote><p>所以為什麼 pnpm 的 <code>node_modules</code> 如此特殊？ 讓我們先創建兩個資料夾，然後在其中一個資料夾執行 <code>npm add express</code>，另一個資料夾執行 <code>pnpm add express</code> 以下是您能在第一個資料夾中的 <code>node_modules</code> 內能看到的資料夾：</p><div class="language-text codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">.bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">accepts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">array-flatten</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">body-parser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">content-disposition</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cookie-signature</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cookie</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">debug</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">depd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">destroy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ee-first</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">encodeurl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">escape-html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">etag</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">express</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>您可以在<a href="https://github.com/zkochan/comparing-node-modules/tree/master/npm-example/node_modules" target="_blank" rel="noopener noreferrer">這裡</a>看到整個資料夾結構</p><p>以及，這是您能在 pnpm 創建的 <code>node_modules</code> 資料夾中看到的：</p><div class="language-text codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">.pnpm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.modules.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">express</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>您可以在<a href="https://github.com/zkochan/comparing-node-modules/tree/master/pnpm5-example/node_modules" target="_blank" rel="noopener noreferrer">這裡</a>查看</p><p>所以全部的依賴套件跑去哪了？ <code>node_modules</code> 裡面只有一個名為 <code>.pnpm</code> 的資料夾還有一個名為 <code>express</code> 的軟連結。 嗯，因為我們只有安裝 <code>express</code>，所以只有那個套件是您的程式可以存取的。</p><blockquote><p>您可以<a href="https://medium.com/pnpm/pnpms-strictness-helps-to-avoid-silly-bugs-9a15fb306308" target="_blank" rel="noopener noreferrer">在此</a>了解更多關於為什麼pnpm的嚴格性是好的東西</p></blockquote><p>讓我們看看 <code>express</code>資料夾內有什麼：</p><div class="language-text codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">▾ node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ▸ .pnpm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ▾ express</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ▸ lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      History.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      index.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      LICENSE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Readme.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  .modules.yaml</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>express</code> 中沒有 <code>node_modules</code> 資料夾？ 那 <code>express</code> 的全部依賴套件跑去哪了？</p><p>秘訣就是 <code>express</code> 只是一個軟連結。 當 Node.js 解析依賴套件時，因為 Node.js 會使用它們的真實位置，所以 Node.js 不會保留軟連結。 或許你會想問： <code>express</code> 的真實位置在哪裡？</p><p>答案是在這裡：<a href="https://github.com/zkochan/comparing-node-modules/tree/master/pnpm5-example/node_modules/.pnpm/express@4.17.1/node_modules/express" target="_blank" rel="noopener noreferrer">node_modules/.pnpm/express@4.17.1/node_modules/express</a>。</p><p>好的，所以我們現在瞭解了 <code>.pnpm/</code> 資料夾的作用。 <code>.pnpm/</code> 是以扁平化的方式儲存所有模組，所以所有模組可以在以下這個路徑找到：</p><div class="language-text codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">.pnpm/&lt;模組名稱&gt;@&lt;模組版本&gt;/node_modules/&lt;模組名稱&gt;</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我們稱它為虛擬的儲存資料夾</p><p>不像 npm 第 3、4、5、6 版或Yarn的第 1 版的扁平化 <code>node_modules</code>，這個扁平化結構除了可以避免巢狀 <code>node_modules</code> 帶來的長路徑問題，也能使模組保持獨立。</p><p>現在，讓我們來看一下 <code>express</code> 真正的位置：</p><div class="language-text codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">  ▾ express</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ▸ lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      History.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      index.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      LICENSE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Readme.md</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>這是在騙人嗎？ 還是沒有 <code>node_modules</code> 資料夾呀！ 第二個 pnpm 的 <code>node_modules</code> 資料夾結構秘訣就是，模組的依賴套件會和依賴套件實際位置在同一層資料夾。 所以 <code>express</code> 的依賴套件位置不是在 <code>.pnpm/express@4.17.1/node_modules/express/node_modules/</code>，而是在 <a href="https://github.com/zkochan/comparing-node-modules/tree/master/pnpm5-example/node_modules/.pnpm/express@4.17.1/node_modules" target="_blank" rel="noopener noreferrer">.pnpm/express@4.17.1/node_modules/</a>：</p><div class="language-text codeBlockContainer_qBuI theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_s4cj"><pre tabindex="0" class="prism-code language-text codeBlock_ZB_v thin-scrollbar"><code class="codeBlockLines_iNkr"><span class="token-line" style="color:#393A34"><span class="token plain">▾ node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ▾ .pnpm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ▸ accepts@1.3.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ▸ array-flatten@1.1.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ▾ express@4.16.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ▾ node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▸ accepts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▸ array-flatten</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▸ body-parser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▸ content-disposition</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▸ etag</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▾ express</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          ▸ lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            History.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            index.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            LICENSE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Readme.md</span><br></span></code></pre><div class="buttonGroup_MJM4"><button type="button" aria-label="複製內容至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_rG_2" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_l0xu"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_DXTq"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>express</code> 的全部依賴套件都會軟連結至 <code>node_modules/.pnpm/</code> 內對應的資料夾。 將 <code>express</code> 的依賴模組放在同一層資料夾可以避免軟連結循環。</p><p>所以如您所見，雖然一開始似乎會覺得 pnpm 的 <code>node_modules</code> 結構很特殊：</p><ol><li>但他和 Node.js 完全相容</li><li>並且模組和其依賴套件可以被很好的分類</li></ol><p>對於有對等依賴套件的模組，結構會稍微<a href="/zh-TW/how-peers-are-resolved">更複雜一點</a>，但概念還是一樣的：使用軟連結和扁平化資料夾結構創建巢狀結構</p>]]></content>
        <author>
            <name>Zoltan Kochan</name>
            <uri>http://twitter.com/zoltankochan</uri>
        </author>
    </entry>
</feed>