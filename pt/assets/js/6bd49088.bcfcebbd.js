"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7316],{9613:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>f});var n=o(9496);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=s(o),u=a,f=c["".concat(p,".").concat(u)]||c[u]||m[u]||r;return o?n.createElement(f,l(l({ref:t},d),{},{components:o})):n.createElement(f,l({ref:t},d))}));function f(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,l=new Array(r);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<r;s++)l[s]=o[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},5093:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=o(1966),a=o(9836),r=(o(9496),o(9613)),l=["components"],i={id:"filtering",title:"Filtragem"},p=void 0,s={unversionedId:"filtering",id:"version-8.x/filtering",title:"Filtragem",description:"A filtragem permite restringir comandos a subconjuntos espec\xedficos de pacotes.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-8.x/filtering.md",sourceDirName:".",slug:"/filtering",permalink:"/pt/filtering",draft:!1,editUrl:"https://translate.pnpm.io/project/pnpm/pt-BR",tags:[],version:"8.x",frontMatter:{id:"filtering",title:"Filtragem"},sidebar:"version-8.x/docs",previous:{title:"Configurando",permalink:"/pt/configuring"},next:{title:"Scripts",permalink:"/pt/scripts"}},d={},c=[{value:"Coincidindo",id:"coincidindo",level:2},{value:"--filter &lt;nome_do_pacote&gt;",id:"--filter-nome_do_pacote",level:3},{value:"--filter &lt;nome_do_pacote&gt;...",id:"--filter-nome_do_pacote-1",level:3},{value:"--filter &lt;nome_do_pacote&gt;^...",id:"--filter-nome_do_pacote-2",level:3},{value:"--filter ...&lt;nome_do_pacote&gt;",id:"--filter-nome_do_pacote-3",level:3},{value:"--filter &quot;...^&lt;nome_do_pacote&gt;&quot;",id:"--filter-nome_do_pacote-4",level:3},{value:"--filter ./&lt;glob&gt;, --filter {&lt;glob&gt;}",id:"--filter-glob---filter-glob",level:3},{value:"--filter &quot;<desde>&quot;",id:"--filter-desde",level:3},{value:"Excluindo",id:"excluindo",level:2},{value:"Multiplicidade",id:"multiplicidade",level:2},{value:"--filter-prod &lt;filtering_pattern&gt;",id:"--filter-prod-filtering_pattern",level:2},{value:"--test-pattern &lt;glob&gt;",id:"--test-pattern-glob",level:2},{value:"--changed-files-ignore-pattern &lt;glob&gt;",id:"--changed-files-ignore-pattern-glob",level:2}],m={toc:c},u="wrapper";function f(e){var t=e.components,o=(0,a.Z)(e,l);return(0,r.kt)(u,(0,n.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A filtragem permite restringir comandos a subconjuntos espec\xedficos de pacotes."),(0,r.kt)("p",null,"O pnpm suporta uma sintaxe de seletor rica para selecionar pacotes por nome ou por rela\xe7\xe3o."),(0,r.kt)("p",null,"Os seletores podem ser especificados por meio do sinalizador ",(0,r.kt)("inlineCode",{parentName:"p"},"--filter")," (ou ",(0,r.kt)("inlineCode",{parentName:"p"},"-F"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter <package_selector> <command>\n")),(0,r.kt)("h2",{id:"coincidindo"},"Coincidindo"),(0,r.kt)("h3",{id:"--filter-nome_do_pacote"},"--filter ","<","nome_do_pacote>"),(0,r.kt)("p",null,"Para selecionar um pacote exato apenas especifique o nome (",(0,r.kt)("inlineCode",{parentName:"p"},"@scope/pkg"),") ou use um padr\xe3o para selecionar um conjunto de pacotes (",(0,r.kt)("inlineCode",{parentName:"p"},"@scope/*"),")."),(0,r.kt)("p",null,"Exemplos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter "@babel/core" test\npnpm --filter "@babel/*" test\npnpm --filter "*core" test\n')),(0,r.kt)("p",null,"Especificar o escopo do pacote \xe9 opcional, portanto ",(0,r.kt)("inlineCode",{parentName:"p"},"--filter=core")," escolher\xe1 ",(0,r.kt)("inlineCode",{parentName:"p"},"@babel/core")," se ",(0,r.kt)("inlineCode",{parentName:"p"},"core")," n\xe3o for encontrado. No entanto, se o espa\xe7o de trabalho tem v\xe1rios pacotes com o mesmo nome (por exemplo, ",(0,r.kt)("inlineCode",{parentName:"p"},"@babel/core")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"@types/core"),"), ent\xe3o a filtragem sem escopo n\xe3o escolher\xe1 nada."),(0,r.kt)("h3",{id:"--filter-nome_do_pacote-1"},"--filter ","<","nome_do_pacote>..."),(0,r.kt)("p",null,"Para selecionar um pacote e suas depend\xeancias (diretas e n\xe3o diretas), insira o nome do pacote seguido de retic\xeancias ",(0,r.kt)("inlineCode",{parentName:"p"},"<nome_do_pacote>..."),". Por exemplo, o pr\xf3ximo comando executar\xe1 testes de ",(0,r.kt)("inlineCode",{parentName:"p"},"foo")," e todas as suas depend\xeancias:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter foo... test\n")),(0,r.kt)("p",null,"Voc\xea pode usar um padr\xe3o para selecionar um conjunto de pacotes raiz:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter "@babel/preset-*..." test\n')),(0,r.kt)("h3",{id:"--filter-nome_do_pacote-2"},"--filter ","<","nome_do_pacote>^..."),(0,r.kt)("p",null,"Para selecionar APENAS as depend\xeancias de um pacote (diretas e n\xe3o diretas), insira as retic\xeancias mencionadas precedidas por um acento circunflexo antes do nome. Por exemplo, o pr\xf3ximo comando executar\xe1 testes para todas as depend\xeancias de ",(0,r.kt)("inlineCode",{parentName:"p"},"foo"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter "foo^..." test\n')),(0,r.kt)("h3",{id:"--filter-nome_do_pacote-3"},"--filter ...","<","nome_do_pacote>"),(0,r.kt)("p",null,"Para selecionar um pacote e suas depend\xeancias (diretas e n\xe3o diretas), insira retic\xeancias seguido do nome do pacote: ",(0,r.kt)("inlineCode",{parentName:"p"},"...<nome_do_pacote>"),". Por exemplo, isso executar\xe1 os testes de ",(0,r.kt)("inlineCode",{parentName:"p"},"foo")," e de todos os pacotes dependentes dele:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter ...foo test\n")),(0,r.kt)("h3",{id:"--filter-nome_do_pacote-4"},'--filter "...^',"<",'nome_do_pacote>"'),(0,r.kt)("p",null,"Para selecionar APENAS as depend\xeancias de um pacote (tanto diretas quanto n\xe3o-diretas), insira retic\xeancias seguidas de um acento circunflexo antes do nome do pacote. Por exemplo, isso ir\xe1 executar testes para todos os pacotes dependentes de ",(0,r.kt)("inlineCode",{parentName:"p"},"foo"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'pnpm --filter "...^foo" test\n')),(0,r.kt)("h3",{id:"--filter-glob---filter-glob"},"--filter ./","<","glob>, --filter {","<","glob>}"),(0,r.kt)("p",null,"Um padr\xe3o glob relativo ao diret\xf3rio de trabalho atual correspondendo aos projetos."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter "./packages/**" <cmd>\n')),(0,r.kt)("p",null,"Inclui todos os projetos que est\xe3o sob o diret\xf3rio especificado."),(0,r.kt)("p",null,"Ele pode ser usado com os operadores ellipsis e chevron para selecionar dependentes/depend\xeancias tamb\xe9m:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter ...{<directory>} <cmd>\npnpm --filter {<directory>}... <cmd>\npnpm --filter ...{<directory>}... <cmd>\n")),(0,r.kt)("p",null,"Tamb\xe9m pode ser combinado com ",(0,r.kt)("inlineCode",{parentName:"p"},"[<since>]"),". Por exemplo, para selecionar todos os projetos alterados dentro de um diret\xf3rio:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter "{packages/**}[origin/master]" <cmd>\npnpm --filter "...{packages/**}[origin/master]" <cmd>\npnpm --filter "{packages/**}[origem/mestre]..." <cmd>\npnpm --filter "...{packages/**}[origin/master]..." <cmd>\n')),(0,r.kt)("p",null,"Ou voc\xea pode selecionar todos os pacotes de um diret\xf3rio com nomes que correspondam ao padr\xe3o fornecido:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'pnpm --filter "@babel/*{components/**}" <cmd>\npnpm --filter "@babel/*{components/**}[origin/master]" <cmd>\npnpm --filter "...@babel/*{components/**}[origin/master]" <cmd>\n')),(0,r.kt)("h3",{id:"--filter-desde"},'--filter "',"[<","desde>]",'"'),(0,r.kt)("p",null,"Seleciona todos os pacotes alterados desde o commit/branch especificado. Pode ser sufixado ou prefixado com ",(0,r.kt)("inlineCode",{parentName:"p"},"...")," para incluir depend\xeancias/dependentes."),(0,r.kt)("p",null,"Por exemplo, o pr\xf3ximo comando executar\xe1 testes em todos os pacotes alterados desde ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," e em quaisquer pacotes dependentes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm -- filter "... [origin/master]" teste\n')),(0,r.kt)("h2",{id:"excluindo"},"Excluindo"),(0,r.kt)("p",null,'Qualquer um dos seletores de filtro pode funcionar como operadores de exclus\xe3o quando tiver um "!" \xe0 esquerda de. Em zsh (e possivelmente em outros shells), "!" deve ser escapado: ',(0,r.kt)("inlineCode",{parentName:"p"},"\\!"),"."),(0,r.kt)("p",null,"Por exemplo, isso executar\xe1 um comando em todos os projetos, exceto ",(0,r.kt)("inlineCode",{parentName:"p"},"foo"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter=!foo <cmd>\n\n")),(0,r.kt)("p",null,"E isso executar\xe1 um comando em todos os projetos que n\xe3o estiverem no diret\xf3rio ",(0,r.kt)("inlineCode",{parentName:"p"},"lib"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter=!./lib <cmd>\n")),(0,r.kt)("h2",{id:"multiplicidade"},"Multiplicidade"),(0,r.kt)("p",null,"Quando os pacotes s\xe3o filtrados, todo pacote que corresponde a pelo menos um dos seletores \xe9 obtido. Voc\xea pode usar quantos filtros quiser:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter ...foo --filter bar --filter baz... test\n")),(0,r.kt)("h2",{id:"--filter-prod-filtering_pattern"},"--filter-prod ","<","filtering_pattern>"),(0,r.kt)("p",null,"Atua da mesma forma ",(0,r.kt)("inlineCode",{parentName:"p"},"--filter"),", mas omite ",(0,r.kt)("inlineCode",{parentName:"p"},"devDependencies")," ao selecionar projetos de depend\xeancia do espa\xe7o de trabalho."),(0,r.kt)("h2",{id:"--test-pattern-glob"},"--test-pattern ","<","glob>"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test-pattern")," permite detectar se os arquivos modificados est\xe3o relacionados a testes. Se estiverem, os pacotes dependentes desses pacotes modificados n\xe3o ser\xe3o inclu\xeddos."),(0,r.kt)("p",null,'Esta op\xe7\xe3o \xe9 \xfatil com o filtro "alterado desde". Por exemplo, o pr\xf3ximo comando executar\xe1 testes em todos os pacotes alterados e, se as altera\xe7\xf5es estiverem no c\xf3digo-fonte do pacote, os testes tamb\xe9m ser\xe3o executados nos pacotes dependentes:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter="...[origin/master]" --test-pattern="test/*" test\n')),(0,r.kt)("h2",{id:"--changed-files-ignore-pattern-glob"},"--changed-files-ignore-pattern ","<","glob>"),(0,r.kt)("p",null,"Permite ignorar arquivos alterados por padr\xf5es glob ao filtrar projetos alterados desde o commit/branch especificado."),(0,r.kt)("p",null,"Exemplos de uso:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter="...[origin/master]" --changed-files-ignore-pattern="**/README.md" run build\n')))}f.isMDXComponent=!0}}]);